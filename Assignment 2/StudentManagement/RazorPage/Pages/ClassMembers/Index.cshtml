@page
@model RazorPage.Pages.ClassMembers.IndexModel
@{
    ViewData["Title"] = "Index";
}

<h1>Class member management</h1>
@if (Model.Message != null)
{
    <p class="text-danger text-center">@Model.Message</p>
}
<div class="d-flex justify-content-between align-items-center mt-3">
    <form class="input-group w-50" method="post">
        <input asp-for="@Model.Query" class="form-control" placeholder="Search..." />
        <button type="submit" class="btn btn-secondary">Search</button>
    </form>
    <a asp-page="Create" class="btn btn-primary">Create New</a>

</div>
<table class="table mt-4 table-striped border border-1 border-dark ">
    <thead class="text-light bg-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ClassMember[0].MemberId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClassMember[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClassMember[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClassMember[0].DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClassMember[0].Role)
            </th>
            <th colspan="2">
                @Html.DisplayNameFor(model => model.ClassMember[0].Gender)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ClassMember != null)
        {
            @foreach (var item in Model.ClassMember)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.MemberId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Role)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>

                    <td class="text-end py-1">
                        <a class="btn btn-warning " asp-page="./Edit" asp-route-id="@item.MemberId">Edit</a>
                    </td>
                    <td class="text-end py-1">
                        <a class="btn btn-danger " asp-page="./Delete" asp-route-id="@item.MemberId">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


<nav aria-label="Page navigation example" class="d-flex justify-content-center align-items-center">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.Page > 1 ? (Model.Page - 1) : 1)" 
                asp-route-query="@Model.Query"
                aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>

        @for(int i = 1; i <= Model.TotalPage; i++)
        {
            <li class="page-item @(Model.Page == i ? "active" : "")">
                <a class="page-link " asp-page="./Index" asp-route-pageNumber="@i" asp-route-query="@Model.Query">@i</a>
            </li>
        }
        <li class="page-item">
            <a class="page-link" asp-page="./Index"
            asp-route-pageNumber="@(Model.Page < @Model.TotalPage ? (@Model.Page + 1) : @Model.TotalPage)"
            asp-route-query="@Model.Query"
            aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>
